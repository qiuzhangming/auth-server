<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzdz.security.mapper.UserMapper">

    <resultMap id="MyUser" type="com.zzdz.security.model.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="fullname" property="fullname"/>
        <result column="mobile" property="mobile"/>
        <result column="enabled" property="enabled"/>
        <result column="deleted" property="deleted"/>
        <collection property="authorities" ofType="com.zzdz.security.model.Authority">
            <id column="authority_id" property="id"/>
            <result column="authority_name" property="authorityName"/>
            <result column="authority_describe" property="authorityDescribe"/>
        </collection>
    </resultMap>

    <!-- void save(User user);-->
    <!-- parameterType: 参数类型，可以省略-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.zzdz.security.model.User">
        insert into user (username, password, fullname, mobile, enabled, deleted)
        values (#{username}, #{password}, #{fullname}, #{mobile}, #{enabled}, #{deleted})
    </insert>

    <!-- boolean deleteById(Integer id);-->
    <delete id="deleteById" >
        delete from user where id = #{id}
    </delete>

    <!-- boolean updateById(User user);-->
    <update id="updateById" parameterType="com.zzdz.security.model.User" >
        update user
        <set>
            <if test="fullname != null">
                fullname = #{fullname},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="enabled != null ">
                enabled = #{enabled},
            </if>
            <if test="deleted != null ">
                deleted = #{deleted}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!-- User findByUsername(String username);-->
    <select id="findByUsername" resultMap="MyUser">
        SELECT user.id, user.username, user.password, user.fullname, user.mobile, user.deleted, user.enabled,
        authority.id authority_id, authority.authority_name, authority.authority_describe
        FROM user
        LEFT JOIN relational_user_authority ON relational_user_authority.user_id = user.id
        LEFT JOIN authority ON authority.id = relational_user_authority.authority_id
        WHERE user.username = #{username}
    </select>

    <!-- List<User> findAllByUsername(@Param("username") String username);-->
    <select id="findAllByUsername" resultType="com.zzdz.security.model.User">
        select * from user where username = #{username}
    </select>

    <!-- 动态拼装查询条件 -->
    <!-- List<User> findAllByDynamic(User user);-->
    <select id="findAllByDynamic" resultType="com.zzdz.security.model.User">
        select * from user
        <where>
            <choose>
                <when test="id != null">
                    id = #{id}
                </when>
                <otherwise>
                    <if test="username != null and username != '' ">
                        username = #{username}
                    </if>
                    <if test="fullname != null and fullname.trim() != '' ">
                        and fullname = #{fullname}
                    </if>
                    <if test="enabled == true or enabled == false ">
                        and enabled = #{enabled}
                    </if>
                    <if test="deleted == true or deleted == false ">
                        and deleted = #{deleted}
                    </if>
                </otherwise>
            </choose>
        </where>
    </select>

    <!-- List<User> findAllByIds(List<Integer> ids);-->
    <select id="findAllByIds" resultType="com.zzdz.security.model.User">
        select * from user
        where id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- void addUsers(@Param("users") List<User> users);-->
    <insert id="addUsers">
        insert into user (username, password, fullname, mobile, enabled, deleted)
        values
        <foreach item="user" index="index" collection="users" separator=",">
            (#{user.username}, #{user.password}, #{user.fullname}, #{user.mobile}, #{user.enabled}, #{user.deleted})
        </foreach>
    </insert>

</mapper>